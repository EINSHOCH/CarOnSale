<script>



$('.dropdown-link').click(function(){ // do when one of the dropdown elements is clicked
var changetext = $(this).text(); // get the text of the clicked element
$('.control.dropdown-text').text(changetext); // change the text of the control class to the clicked elements text
});
</script>


<!--Combine two form fields to generate phone number with dialing code-->
<script>

var dial = document.getElementById('Dialing-code');
var number = document.getElementById('Phone-number');
var completenumber = document.getElementById('Phone-sup');




number.addEventListener('input', function (evt) {
completenumber.value = dial.value + " " + number.value;
});


</script>

<script>

const form = document.querySelector('#Sign-Up-sales-force');
const country = document.querySelector('#Land-sup');
const buyer = document.querySelector('#Datenschutz-sup');

function submitForm() {

  window.dataLayer = window.dataLayer || [];
  dataLayer.push({
    'event': 'buyer-signup-form-submit',
    'country': country.value,
    'buyer': buyer.checked,
  }); 
}

form.addEventListener('submit', submitForm);  
  
</script>

<script>
//Tracking inputs

//company name
$('#Firmenname-sup').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_companyName',
  formName: 'registration_form_registration_form_top_signupLP'
 });
 
});

//Country
$('#Land-sup').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_Country',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});


//email
$('#Email-sup').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_Email',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});


//dialing-code
$('#Dialing-code').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_dialingCode',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});


//phone-number
$('#Phone-number').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_phoneNumber',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});

//confirmation Car Dealer
$('#Autohaendler-sup').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_carDealerConfirmation',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});

//GDPR
$('#Datenschutz-sup').click(function() {

 window.dataLayer.push({
  event: 'gtm_event',
  eventName: 'registration_form_interaction',
  itemName: 'click_GDPR',
  formName: 'registration_form_registration_form_signupLP'
 });
 
});

$("#confirm").click(function() {
  sessionStorage.setItem("form", "signup-lp");
});

</script>

<!-- HP Spam Protection - NP - 05.10.22-->
<script>
// $(document).ready(function () {

//     $("#confirm").click(function (e) { 
//           if(!$("#hp").val()){ 
//         }                            
//         else{
//             e.preventDefault();
//         }
//     });
    
//       $("#confirm-2").click(function (e) { 
//           if(!$("#hp-2").val()){ 
//         }                            
//         else{
//             e.preventDefault();
//         }
//     });
    
    
// });
</script>


<script>
Weglot.on("switchersReady", function(initialLanguage) {
  var currentlan = Weglot.getCurrentLang();
	console.log(currentlan);
  sessionStorage.setItem("reg", currentlan);
});

</script>

<!-- Remove first select option - LP - 14.11.22-->
<script>
$("select option:first-child").attr("disabled", "true");
</script>

<script>
// Objekt mit übersetzten Fehlermeldungen
var errorMessages = {
    "at": {"input": "muss ausgefüllt werden", "checkbox": "Alle Häkchen sollen gesetzt werden"},
    "dk": {"input": "skal udfyldes", "checkbox": "Alle afkrydsningsfelter skal markeres"},
    "cz": {"input": "musí být vyplněno", "checkbox": "Všechny zaškrtávací políčka musí být zaškrtnuta"},
    "se": {"input": "måste fyllas i", "checkbox": "Alla kryssrutor måste vara ikryssade"},
    "de": {"input": "muss ausgefüllt werden", "checkbox": "Alle Häkchen sollen gesetzt werden"},
    "fr": {"input": "doit être rempli", "checkbox": "Toutes les cases doivent être cochées"},
    "nl": {"input": "moet worden ingevuld", "checkbox": "Alle selectievakjes moeten worden aangevinkt"},
    "it": {"input": "deve essere compilato", "checkbox": "Tutte le caselle devono essere selezionate"},
    "pl": {"input": "musi być wypełnione", "checkbox": "Wszystkie pola wyboru muszą być zaznaczone"},
    "tr": {"input": "doldurulmalıdır", "checkbox": "Tüm onay kutuları işaretlenmelidir"},
    "ru": {"input": "должно быть заполнено", "checkbox": "Все флажки должны быть установлены"},
    "hu": {"input": "ki kell tölteni", "checkbox": "Minden jelölőnégyzetet be kell jelölni"},
    "lt": {"input": "privaloma užpildyti", "checkbox": "Visi žymimieji laukeliai turi būti pažymėti"},
    "ro": {"input": "trebuie completat", "checkbox": "Toate căsuțele trebuie bifate"},
    "sl": {"input": "je treba izpolniti", "checkbox": "Vsa potrditvena polja je treba označiti"},
    "es": {"input": "debe ser completado", "checkbox": "Todas las casillas deben estar marcadas"},
    "pt": {"input": "deve ser preenchido", "checkbox": "Todas as caixas de seleção devem ser marcadas"},
    "en": {"input": "is required", "checkbox": "All checkboxes must be checked"}
    // Weitere Sprachen können hier hinzugefügt werden
};

function getBrowserLanguage() {
    return navigator.language || navigator.userLanguage;
}

function getCurrentLanguage() {
    return document.documentElement.lang || "de"; // Standardmäßig auf DE zurückgreifen, wenn keine Sprache gesetzt ist
}

function onSubmit(token) {
    var form = document.getElementById("wf-form-Sign-Up");
    var allFilled = true;
    var requiredFields = form.querySelectorAll('[required]');

    // Entfernen der Hervorhebung von allen Feldern
    requiredFields.forEach(function(field) {
        field.classList.remove("required-field-empty");
    });

    var userLang = getBrowserLanguage().split('-')[0]; // Erhält z.B. "de" aus "de-DE"

    // Überprüfen aller erforderlichen Felder
    for (let field of requiredFields) {
        var isCheckbox = field.type === "checkbox";
        var isEmpty = isCheckbox ? !field.checked : !field.value;
        var errorMessage;

        if (isEmpty) {
            allFilled = false;

            if (isCheckbox) {
                // Hinzufügen der Hervorhebung zum <span>-Element der Checkbox
                var labelSpan = field.nextElementSibling; // Das <span> ist das nächste Element nach der Checkbox
                if (labelSpan && labelSpan.classList.contains("w-form-label")) {
                    labelSpan.classList.add("required-field-empty");
                }
            } else {
                field.classList.add("required-field-empty"); // Fügt die Hervorhebung hinzu
            }

            if (field.tagName === "SELECT" && !field.placeholder) {
                // Nimmt den Text der ersten Option, wenn kein placeholder vorhanden ist
                errorMessage = field.options[0].text + " " + (errorMessages[userLang]["input"] || errorMessages["en"]["input"]);
            } else {
                errorMessage = (field.placeholder || field.name) + " " + (errorMessages[userLang]["input"] || errorMessages["en"]["input"]);
            }

            if (isCheckbox) {
                errorMessage = errorMessages[userLang]["checkbox"] || errorMessages["en"]["checkbox"];
            }

            alert(errorMessage); // Zeigt die Fehlermeldung
            break;
        }
    }

    // Füge Event-Listener für alle Eingabefelder erneut hinzu
    requiredFields.forEach(function(field) {
        // Listener für normale Eingabefelder
        field.addEventListener('input', function() {
            this.classList.remove("required-field-empty");
        });

        // Zusätzlicher Listener speziell für Checkboxen
        if (field.type === "checkbox") {
            field.addEventListener('change', function() {
                this.classList.remove("required-field-empty");
                var labelSpan = this.nextElementSibling;
                if (labelSpan && labelSpan.classList.contains("w-form-label")) {
                    labelSpan.classList.remove("required-field-empty");
                }
            });
        }
    });

    // Nur wenn alle erforderlichen Felder ausgefüllt sind, wird das Formular abgeschickt
    if (allFilled) {
        form.submit();
    }
}



if (allFilled) {
    // Initialisiere das FormData-Objekt korrekt mit dem 'form'-Element
    var formData = new FormData(form); // 'form' ist bereits dein Formularelement

    var object = {};
    formData.forEach(function(value, key){
        object[key] = value;
    });
    var json = JSON.stringify(object);
     console.log("Sendende Daten:", json); // Überprüfe, was gesendet wird

    // Verwende die Fetch-API, um die Daten an deinen Hook zu senden
    fetch('https://hook.eu1.make.com/29g1p1y4wy56qh3ogz5dbnfiikriby0p', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: json,
    }).then(response => {
        console.log('Daten erfolgreich an den Webhook gesendet');
        // Absenden des Formulars, nachdem die Daten erfolgreich gesendet wurden
        form.submit();
    }).catch(error => {
        console.error('Fehler beim Senden der Daten an den Webhook: ', error);
        // Absenden des Formulars auch im Fehlerfall
        form.submit();
    });
}
    }
</script>
